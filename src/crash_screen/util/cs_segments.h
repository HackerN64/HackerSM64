#pragma once

#include <ultra64.h>

#include "types.h"

typedef enum TableSegments {
    SEG_TABLE_MAIN                = SEGMENT_MAIN,
    SEG_TABLE_RENDER              = SEGMENT_RENDER,
    SEG_TABLE_SEGMENT2            = SEGMENT_SEGMENT2,
    SEG_TABLE_COMMON1_YAY0        = SEGMENT_COMMON1_YAY0,
    SEG_TABLE_GROUP0_YAY0         = SEGMENT_GROUP0_YAY0,
    SEG_TABLE_GROUPA_YAY0         = SEGMENT_GROUPA_YAY0,
    SEG_TABLE_GROUPB_YAY0         = SEGMENT_GROUPB_YAY0,
    SEG_TABLE_LEVEL_DATA          = SEGMENT_LEVEL_DATA,
    SEG_TABLE_COMMON0_YAY0        = SEGMENT_COMMON0_YAY0,
    SEG_TABLE_TEXTURE             = SEGMENT_TEXTURE,
    SEG_TABLE_SKYBOX              = SEGMENT_SKYBOX,
    SEG_TABLE_EFFECT_YAY0         = SEGMENT_EFFECT_YAY0,
    SEG_TABLE_GROUPA_GEO          = SEGMENT_GROUPA_GEO,
    SEG_TABLE_GROUPB_GEO          = SEGMENT_GROUPB_GEO,
    SEG_TABLE_LEVEL_SCRIPT        = SEGMENT_LEVEL_SCRIPT,
    SEG_TABLE_COMMON0_GEO         = SEGMENT_COMMON0_GEO,
    SEG_TABLE_LEVEL_ENTRY         = SEGMENT_LEVEL_ENTRY,
    SEG_TABLE_MARIO_ANIMS         = SEGMENT_MARIO_ANIMS,
    SEG_TABLE_UNKNOWN_18          = SEGMENT_UNKNOWN_18,
    SEG_TABLE_BEHAVIOR_DATA       = SEGMENT_BEHAVIOR_DATA,
    SEG_TABLE_MENU_INTRO          = SEGMENT_MENU_INTRO,
    SEG_TABLE_GLOBAL_LEVEL_SCRIPT = SEGMENT_GLOBAL_LEVEL_SCRIPT,
    SEG_TABLE_COMMON1_GEO         = SEGMENT_COMMON1_GEO,
    SEG_TABLE_GROUP0_GEO          = SEGMENT_GROUP0_GEO,
    SEG_TABLE_DEMO_INPUTS         = SEGMENT_DEMO_INPUTS,
    SEG_TABLE_EU_TRANSLATION      = SEGMENT_EU_TRANSLATION,
    SEG_TABLE_UNKNOWN_26          = SEGMENT_UNKNOWN_26,
    SEG_TABLE_UNKNOWN_27          = SEGMENT_UNKNOWN_27,
    SEG_TABLE_UNKNOWN_28          = SEGMENT_UNKNOWN_28,
    SEG_TABLE_UNKNOWN_29          = SEGMENT_UNKNOWN_29,
    SEG_TABLE_UNKNOWN_30          = SEGMENT_UNKNOWN_30,
    SEG_TABLE_UNKNOWN_31          = SEGMENT_UNKNOWN_31,
    NUM_TABLE_SEGS,
} TableSegments;

typedef enum HardcodedSegments {
    SEG_HARDCODED_MAIN,
    SEG_HARDCODED_ENGINE,
    SEG_HARDCODED_CRASH_SCREEN,
    SEG_HARDCODED_FRAMEBUFFERS,
    SEG_HARDCODED_ZBUFFER,
    SEG_HARDCODED_BUFFERS,
    SEG_HARDCODED_MAPDATA,
    SEG_HARDCODED_GODDARD,
    NUM_HARDCODED_SEGS,
} HardcodedSegments;

typedef enum SegmentsList {
    SEG_TABLE_START,
    SEG_MAIN                = (SEG_TABLE_START + SEG_TABLE_MAIN),
    SEG_RENDER              = (SEG_TABLE_START + SEG_TABLE_RENDER),
    SEG_SEGMENT2            = (SEG_TABLE_START + SEG_TABLE_SEGMENT2),
    SEG_COMMON1_YAY0        = (SEG_TABLE_START + SEG_TABLE_COMMON1_YAY0),
    SEG_GROUP0_YAY0         = (SEG_TABLE_START + SEG_TABLE_GROUP0_YAY0),
    SEG_GROUPA_YAY0         = (SEG_TABLE_START + SEG_TABLE_GROUPA_YAY0),
    SEG_GROUPB_YAY0         = (SEG_TABLE_START + SEG_TABLE_GROUPB_YAY0),
    SEG_LEVEL_DATA          = (SEG_TABLE_START + SEG_TABLE_LEVEL_DATA),
    SEG_COMMON0_YAY0        = (SEG_TABLE_START + SEG_TABLE_COMMON0_YAY0),
    SEG_TEXTURE             = (SEG_TABLE_START + SEG_TABLE_TEXTURE),
    SEG_SKYBOX              = (SEG_TABLE_START + SEG_TABLE_SKYBOX),
    SEG_EFFECT_YAY0         = (SEG_TABLE_START + SEG_TABLE_EFFECT_YAY0),
    SEG_GROUPA_GEO          = (SEG_TABLE_START + SEG_TABLE_GROUPA_GEO),
    SEG_GROUPB_GEO          = (SEG_TABLE_START + SEG_TABLE_GROUPB_GEO),
    SEG_LEVEL_SCRIPT        = (SEG_TABLE_START + SEG_TABLE_LEVEL_SCRIPT),
    SEG_COMMON0_GEO         = (SEG_TABLE_START + SEG_TABLE_COMMON0_GEO),
    SEG_LEVEL_ENTRY         = (SEG_TABLE_START + SEG_TABLE_LEVEL_ENTRY),
    SEG_MARIO_ANIMS         = (SEG_TABLE_START + SEG_TABLE_MARIO_ANIMS),
    SEG_UNKNOWN_18          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_18),
    SEG_BEHAVIOR_DATA       = (SEG_TABLE_START + SEG_TABLE_BEHAVIOR_DATA),
    SEG_MENU_INTRO          = (SEG_TABLE_START + SEG_TABLE_MENU_INTRO),
    SEG_GLOBAL_LEVEL_SCRIPT = (SEG_TABLE_START + SEG_TABLE_GLOBAL_LEVEL_SCRIPT),
    SEG_COMMON1_GEO         = (SEG_TABLE_START + SEG_TABLE_COMMON1_GEO),
    SEG_GROUP0_GEO          = (SEG_TABLE_START + SEG_TABLE_GROUP0_GEO),
    SEG_DEMO_INPUTS         = (SEG_TABLE_START + SEG_TABLE_DEMO_INPUTS),
    SEG_EU_TRANSLATION      = (SEG_TABLE_START + SEG_TABLE_EU_TRANSLATION),
    SEG_UNKNOWN_26          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_26),
    SEG_UNKNOWN_27          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_27),
    SEG_UNKNOWN_28          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_28),
    SEG_UNKNOWN_29          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_29),
    SEG_UNKNOWN_30          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_30),
    SEG_UNKNOWN_31          = (SEG_TABLE_START + SEG_TABLE_UNKNOWN_31),

    SEG_HARDCODED_START,
    SEG_HMAIN               = (SEG_HARDCODED_START + SEG_HARDCODED_MAIN),
    SEG_ENGINE              = (SEG_HARDCODED_START + SEG_HARDCODED_ENGINE),
    SEG_CRASH_SCREEN        = (SEG_HARDCODED_START + SEG_HARDCODED_CRASH_SCREEN),
    SEG_FRAMEBUFFERS        = (SEG_HARDCODED_START + SEG_HARDCODED_FRAMEBUFFERS),
    SEG_ZBUFFER             = (SEG_HARDCODED_START + SEG_HARDCODED_ZBUFFER),
    SEG_BUFFERS             = (SEG_HARDCODED_START + SEG_HARDCODED_BUFFERS),
    SEG_MAPDATA             = (SEG_HARDCODED_START + SEG_HARDCODED_MAPDATA),
    SEG_GODDARD             = (SEG_HARDCODED_START + SEG_HARDCODED_GODDARD),

    NUM_SEGS,
} SegmentsList;


#define IS_HARDCODED_FIRST()                (SEG_HARDCODED_START < SEG_TABLE_START)
#define SEGMENT_LIST_TO_HARDCODED(segment)  (HardcodedSegments)(!IS_HARDCODED_FIRST() ? ((segment) - SEG_HARDCODED_START) : (segment))
#define SEGMENT_LIST_TO_TABLE(segment)      (TableSegments    )( IS_HARDCODED_FIRST() ? ((segment) - SEG_TABLE_START    ) : (segment))

_Bool is_segment_hardcoded(SegmentsList segment);
_Bool is_segment_loaded(SegmentsList segment);

const char* get_segment_name(TableSegments segment);
const char* cs_get_segment_name(SegmentsList segment);
const char* get_segment_sub_name(TableSegments segment);
const char* cs_get_segment_sub_name(SegmentsList segment);

Address cs_get_segment_vAddr(SegmentsList segment);
Address cs_get_segment_pAddr(SegmentsList segment);
size_t cs_get_segment_size(SegmentsList segment);
